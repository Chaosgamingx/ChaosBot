"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Requester = void 0;
const got_1 = __importStar(require("got"));
const errors_1 = require("../errors");
/**
 * Refer [got.Options](https://www.npmjs.com/package/got) for documentation of `OptionsOfTextResponseBody`.
 */
class Requester {
    constructor(url, options) {
        this.url = url;
        this.options = options;
    }
    get(route, headers) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const { body } = yield got_1.default.get(`${this.url}${route}`, Object.assign(Object.assign({}, this.options), { headers: Object.assign(Object.assign({}, headers), (_a = this.options) === null || _a === void 0 ? void 0 : _a.headers) }));
                return body;
            }
            catch (err) {
                throw this._handleError(err);
            }
        });
    }
    _handleError(err) {
        var _a;
        if (err instanceof got_1.RequestError) {
            if (err.response) {
                switch (err.response.statusCode) {
                    case 401:
                        return new errors_1.InvalidGeniusKeyError();
                    case 404:
                        return new errors_1.NoResultError();
                    default:
                        return new errors_1.WithMessageError(err.response.statusCode, (_a = err.response.statusMessage) !== null && _a !== void 0 ? _a : "-");
                }
            }
        }
        return err;
    }
}
exports.Requester = Requester;
